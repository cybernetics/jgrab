# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=jgrab-client

matrix:
  include:
    # Linux
    - env: TARGET=i686-unknown-linux-gnu
#    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=x86_64-unknown-linux-gnu
#    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
#    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
#    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    - env: TARGET=aarch64-unknown-linux-gnu
#    - env: TARGET=armv7-unknown-linux-gnueabihf
#    - env: TARGET=mips-unknown-linux-gnu
#    - env: TARGET=mips64-unknown-linux-gnuabi64
#    - env: TARGET=mips64el-unknown-linux-gnuabi64
#    - env: TARGET=mipsel-unknown-linux-gnu
#    - env: TARGET=powerpc-unknown-linux-gnu
#    - env: TARGET=powerpc64-unknown-linux-gnu
#    - env: TARGET=powerpc64le-unknown-linux-gnu
#    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
#    - env: TARGET=x86_64-unknown-linux-gnu
#      rust: nightly
#    - env: TARGET=x86_64-apple-darwin
#      os: osx
#      rust: nightly

before_install:
  - set -e
  - cd jgrab-client

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

before_script:
  - cd jgrab-client

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "ZI02qgwawVjWauAYFDvcAedDeyDldlFuSad7F9pmKs8m7hzc3c/+tUY5i02SU7Mwi69Wf7CHUWwXsX4/4Vh3fWZmiW8bNEAHdDH2nssKgPdsFrlCf4YUW12MCyepc4R3Zp1Ny+GUfI2+XlrQ6i+oOJ1S52Zm1l9f/ubMDDqjB1kcsO1mj6ZOmn+JEBsUZKqWiTfLsPobjtcci82OfRPBAbdpnalZjiQniDAjRXMdoVNfnu1AjYXvRP4HAWecWTk+XVL1xvTNYM4l9huopaxzKEYRQ8LGrkveNBPaaZYGb+3UCpT+/DwhjnQUeg7xYamfyVghUXzDOrruNnjPNJd3XxOJno6/3KExj/V1EVAmtt7GcqNHTak6PfnYWdnuaWVt8MAj7srRjUfFWLuAlVkm7NZZP/dqBjR1PvxfMLtusmZMveIaNv8+rMcJ099frAGRYwobeWbSu3mDbOAGA8lcebUShsY6ijulXHURyMWndU7qaMbJuuTd92O8N6kfdiFRxBYcwGsyu+dqGAFo2sNO7v+7f44GJ7AGAfpunGCrD4fpgoWUvgObcInpp++xny9njaqr3UsNz0/hqi63/TgQ5v99jMy8FqkFJZzm3mCx+d0ArGvLu5xa5YEfC1Gdwc0mHON7UtupxTc9dtgoiMbWNrdPA3CaOigBdg9LrRUIwwk="

  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - master
    - trust-test

notifications:
  email:
on_success: never
