# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
    RUST_VERSION: stable

    CRATE_NAME: jgrab-client

  matrix:
    # MinGW
    - TARGET: i686-pc-windows-gnu
    - TARGET: x86_64-pc-windows-gnu

    # MSVC
    - TARGET: i686-pc-windows-msvc
    - TARGET: x86_64-pc-windows-msvc

    # Testing other channels
#    - TARGET: x86_64-pc-windows-gnu
#      RUST_VERSION: nightly
#    - TARGET: x86_64-pc-windows-msvc
#      RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

#test_script:
  # we don't run the "test phase" when doing deploys
#  - if [%APPVEYOR_REPO_TAG%]==[false] (
#      cargo build --target %TARGET% &&
#      cargo build --target %TARGET% --release &&
#      cargo test --target %TARGET% &&
#      cargo test --target %TARGET% --release &&
#      cargo run --target %TARGET% &&
#      cargo run --target %TARGET% --release
#    )

before_deploy:
  - cd jgrab-client
  - cargo rustc --target %TARGET% --release --bin
  - ps: ci\before_deploy.ps1

deploy:
  artifact: /.*\.zip/
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it. Go to https://ci.appveyor.com/tools/encrypt
  # - Paste the output down here
  auth_token:
    secure: "ZI02qgwawVjWauAYFDvcAedDeyDldlFuSad7F9pmKs8m7hzc3c/+tUY5i02SU7Mwi69Wf7CHUWwXsX4/4Vh3fWZmiW8bNEAHdDH2nssKgPdsFrlCf4YUW12MCyepc4R3Zp1Ny+GUfI2+XlrQ6i+oOJ1S52Zm1l9f/ubMDDqjB1kcsO1mj6ZOmn+JEBsUZKqWiTfLsPobjtcci82OfRPBAbdpnalZjiQniDAjRXMdoVNfnu1AjYXvRP4HAWecWTk+XVL1xvTNYM4l9huopaxzKEYRQ8LGrkveNBPaaZYGb+3UCpT+/DwhjnQUeg7xYamfyVghUXzDOrruNnjPNJd3XxOJno6/3KExj/V1EVAmtt7GcqNHTak6PfnYWdnuaWVt8MAj7srRjUfFWLuAlVkm7NZZP/dqBjR1PvxfMLtusmZMveIaNv8+rMcJ099frAGRYwobeWbSu3mDbOAGA8lcebUShsY6ijulXHURyMWndU7qaMbJuuTd92O8N6kfdiFRxBYcwGsyu+dqGAFo2sNO7v+7f44GJ7AGAfpunGCrD4fpgoWUvgObcInpp++xny9njaqr3UsNz0/hqi63/TgQ5v99jMy8FqkFJZzm3mCx+d0ArGvLu5xa5YEfC1Gdwc0mHON7UtupxTc9dtgoiMbWNrdPA3CaOigBdg9LrRUIwwk="
  description: ''
#  on:
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
#    RUST_VERSION: stable
#    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - master
    - trust-test

notifications:
  - provider: Email
    on_build_success: false

# Building is done in the test phase, so we disable Appveyor's build phase.
build: false
